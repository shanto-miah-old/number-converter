{"version":3,"sources":["components/Navmenu.jsx","functions/Numberconverter.jsx","components/Convert.jsx","components/Home.jsx","components/SpeedDials.jsx","components/Devinfo.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","title","flexGrow","Navmenu","path","Home","IconButton","color","aria-label","Back","component","Link","to","classes","AppBar","position","Toolbar","Typography","variant","className","anyToDecimal","num","base","toString","split","integer","fraction","parseInt","reduceRight","r","a","decimalTo","decimal","isDecimal","toUpperCase","isBinary","binary","test","isOctal","octal","isHexadecimal","hexadecimal","baseToName","c","val","toLowerCase","Convert","props","state","input","output","convert","isTouched","handleInputChange","bind","validate","error","this","Container","maxWidth","Box","mt","Grid","container","justify","item","xs","sm","md","Card","m","CardContent","from","mb","Divider","onSubmit","e","preventDefault","TextField","type","value","onChange","helperText","fullWidth","label","my","disabled","binaryTo","octalTo","hexadecimalTo","target","setState","length","Component","theme","root","paddingTop","spacing","paddingBottom","ListItemLink","ListItem","button","List","ListItemText","speedDial","bottom","right","top","left","actions","icon","name","SpeedDials","React","useState","open","setOpen","copysucc","setCopysucc","handleClose","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","onClose","onOpen","direction","map","action","SpeedDialAction","key","tooltipTitle","onClick","window","location","origin","navigator","clipboard","writeText","handleClick","message","Transition","Slide","Snackbar","anchorOrigin","vertical","horizontal","TransitionComponent","autoHideDuration","size","fontSize","header","background","Devinfo","href","Routes","pathname","exact","match","params","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","CssBaseline","document","getElementById","URL","process","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c6e4401b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    title : {\r\n        flexGrow : 1\r\n    }\r\n}));\r\n\r\nfunction Navmenu({path}) {\r\n    \r\n    const isHome = () => {\r\n        if(path === \"/\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const Home = () => {\r\n        return (\r\n            <IconButton color=\"inherit\" aria-label=\"Home\">\r\n                <HomeIcon/>\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    const Back = () => {\r\n        return (\r\n            <IconButton component={Link} to=\"/\" color=\"inherit\" aria-label=\"Back\">\r\n                <ArrowBackIcon/>\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar>\r\n\r\n                { isHome() ? <Home/> : <Back/> }\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>Number Converter</Typography>\r\n\r\n                <IconButton component={Link} to=\"developer-info\" color=\"inherit\" aria-label=\"Developer Info\">\r\n                    <InfoIcon/>\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Navmenu;","const anyToDecimal = (num, base) => {\r\n    let [integer, fraction = ''] = num.toString().split('.');\r\n    \r\n    return parseInt(integer, base) + (integer[0] !== '-' || -1) * fraction\r\n        .split('')\r\n        .reduceRight((r, a) => (r + parseInt(a, base)) / base, 0);\r\n}\r\n\r\nconst binaryTo = (binary, base) => {\r\n\r\n    if(!isBinary(binary)) {\r\n        return false;\r\n    }\r\n\r\n    let decimal = anyToDecimal(binary, 2);\r\n\r\n    return decimalTo(decimal, base);\r\n}\r\n\r\nconst decimalTo = (decimal, base) => {\r\n\r\n    if(!isDecimal(decimal)) {\r\n        return false;\r\n    }\r\n\r\n    if (decimal < 0)\r\n    {\r\n        decimal = 0xFFFFFFFF + decimal + 1;\r\n    }\r\n\r\n    return anyToDecimal(decimal, 10).toString(base).toUpperCase();\r\n}\r\n\r\nconst octalTo = (octal, base) => {\r\n\r\n    if(!isOctal(octal)) {\r\n        return false\r\n    }\r\n\r\n    let decimal = anyToDecimal(octal, 8);\r\n\r\n    return decimalTo(decimal, base);\r\n}\r\n\r\nconst hexadecimalTo = (hexadecimal, base) => {\r\n\r\n    if(!isHexadecimal(hexadecimal)) {\r\n        return false;\r\n    }\r\n    \r\n    let decimal = anyToDecimal(hexadecimal, 16);\r\n\r\n    return decimalTo(decimal, base);\r\n}\r\n\r\nconst isBinary = (binary) => {\r\n    const reg = /^[01.]+$/;\r\n\r\n    return reg.test(binary);\r\n}\r\n\r\n\r\nconst isDecimal = (decimal) => {\r\n    const reg = /^[0-9.]+$/;\r\n\r\n    return reg.test(decimal);\r\n}\r\n\r\nconst isOctal = (octal) => {\r\n    const reg = /^[0-7.]+$/;\r\n\r\n    return reg.test(octal);\r\n}\r\n\r\nconst isHexadecimal = (hexadecimal) => {\r\n    const reg = /^[0-9a-fA-F.]+$/;\r\n\r\n    return reg.test(hexadecimal);\r\n}\r\n\r\nconst baseToName = (num, c = 0) => {\r\n\r\n    num = parseInt(num);\r\n    c = parseInt(c);\r\n\r\n    let val = (num === 2) ? 'Binary' : (num === 8) ? 'Octal' : (num === 10) ? 'Decimal' : 'Hexadecimal';\r\n    \r\n    return( (c === 0) ? val : (c === 1) ? val.toUpperCase() : val.toLowerCase() );\r\n}\r\n\r\nexport {\r\n    isBinary,\r\n    isDecimal,\r\n    isOctal,\r\n    isHexadecimal,\r\n    binaryTo,\r\n    decimalTo,\r\n    octalTo,\r\n    hexadecimalTo,\r\n    baseToName\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Text from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {\r\n    binaryTo, isBinary,\r\n    octalTo, isOctal,\r\n    decimalTo, isDecimal,\r\n    hexadecimalTo, isHexadecimal,\r\n    baseToName\r\n} from '../functions/Numberconverter';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nclass Convert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input : this.props.input,\r\n            output : this.convert(this.props.input, this.props.to),\r\n            isTouched : false\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        let error = this.state.isTouched ? this.validate() : false;\r\n\r\n        return (\r\n            <Container maxWidth=\"md\">\r\n                <Box mt={3}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={12} sm={8} md={7}>\r\n                            <Card m={5}>\r\n                                <CardContent>\r\n                                    <Text variant=\"h6\">{ `${baseToName(this.props.from)} To ${baseToName(this.props.to)}` }</Text>\r\n\r\n                                    <Box mb={2}>\r\n                                        <Divider/>\r\n                                    </Box>\r\n\r\n                                    <form onSubmit={(e) => e.preventDefault() }>\r\n                                        <TextField type={ (this.props.from === '16') ? 'text' : 'number' } value={this.state.input} onChange={this.handleInputChange} error={error ? true : false} helperText={error} fullWidth variant=\"outlined\" label={ baseToName(this.props.from) + ' Number' }/>\r\n\r\n                                        <Box my={2}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <IconButton component={Link} to={`/${baseToName(this.props.to, 2)}-to-${baseToName(this.props.from, 2)}/${this.state.output ? this.state.output : ''}`}>\r\n                                                    <SwapVertIcon/>\r\n                                                </IconButton>\r\n                                            </Grid>\r\n                                        </Box>\r\n\r\n                                        <TextField label={ baseToName(this.props.to) + ' Number' } fullWidth value={ this.state.output ? this.state.output : 'N/A' } variant=\"outlined\" disabled />\r\n                                    </form>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    convert(val, base) {\r\n        switch (this.props.from) {\r\n            case '2':\r\n                return binaryTo(val, base);\r\n            case '8':\r\n                return octalTo(val, base);\r\n            case '10':\r\n                return decimalTo(val, base);\r\n            default:\r\n                return hexadecimalTo(val, base);\r\n        }\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            input : value,\r\n            output : this.convert(value, this.props.to),\r\n            isTouched : ((value.length <= 0) ? false : true)\r\n        });\r\n    }\r\n\r\n    validate() {\r\n        let value = this.state.input;\r\n\r\n\r\n        switch (this.props.from) {\r\n            case '2':\r\n                if(!isBinary(value)) {\r\n                    return \"Wrong Binary Number /:-\"\r\n                }\r\n                break;\r\n            case '8':\r\n                if(!isOctal(value)) {\r\n                    return \"Wrong Octal Number (:-\"\r\n                }\r\n                break;\r\n            case '10':\r\n                if(!isDecimal(value)) {\r\n                    return \"Wrong Decimal Number /:-\"\r\n                }\r\n                break;\r\n            default:\r\n                if(!isHexadecimal(value)) {\r\n                    return \"Wrong Hexadecimal Number /:-\"\r\n                }\r\n            break;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport default Convert;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Text from '@material-ui/core/Typography';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root : {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst ListItemLink = (props) => {\r\n    return <ListItem button component={Link} {...props}/>\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Container maxWidth=\"md\" className={classes.root}>\r\n            \r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Text variant=\"h6\">Binary To</Text>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemLink button to=\"binary-to-octal\">\r\n                                    <ListItemText>Octal</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"binary-to-decimal\">\r\n                                    <ListItemText>Decimal</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"binary-to-hexadecimal\">\r\n                                    <ListItemText>Hexadecimal</ListItemText>\r\n                                </ListItemLink>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n               \r\n                <Grid item xs={12} md={6}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Text variant=\"h6\">Octal To</Text>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemLink button to=\"octal-to-binary\">\r\n                                    <ListItemText>Binary</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"octal-to-decimal\">\r\n                                    <ListItemText>Decimal</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"octal-to-hexadecimal\">\r\n                                    <ListItemText>Hexadecimal</ListItemText>\r\n                                </ListItemLink>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n               \r\n                <Grid item xs={12} md={6}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Text variant=\"h6\">Decimal To</Text>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemLink button to=\"decimal-to-binary\">\r\n                                    <ListItemText>Binary</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"decimal-to-octal\">\r\n                                    <ListItemText>Octal</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"decimal-to-hexadecimal\">\r\n                                    <ListItemText>Hexadecimal</ListItemText>\r\n                                </ListItemLink>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n               \r\n                <Grid item xs={12} md={6}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Text variant=\"h6\">Hexadecimal To</Text>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemLink button to=\"hexadecimal-to-binary\">\r\n                                    <ListItemText>Binary</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"hexadecimal-to-octal\">\r\n                                    <ListItemText>Octal</ListItemText>\r\n                                </ListItemLink>\r\n                                <ListItemLink button to=\"hexadecimal-to-decimal\">\r\n                                    <ListItemText>Decimal</ListItemText>\r\n                                </ListItemLink>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Container>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Sb from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  speedDial: {\r\n    position: 'fixed',\r\n    '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\r\n      top: theme.spacing(2),\r\n      left: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  { icon: <FacebookIcon />, name: 'Facebook' },\r\n  { icon: <TwitterIcon />, name: 'Twitter' },\r\n  { icon: <MailOutlineIcon />, name: 'Email' },\r\n  { icon: <LinkIcon />, name: 'Copy Link' },\r\n];\r\n\r\nexport default function SpeedDials() {\r\n\r\n  const classes = useStyles();\r\n\r\n  let [open, setOpen] = React.useState(false);\r\n  \r\n  let [copysucc, setCopysucc] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClick = (name) => {\r\n    handleClose();\r\n\r\n    switch (name) {\r\n      case 'Facebook':\r\n        window.open(`https://www.facebook.com/sharer/sharer.php?u=${window.location.origin}`, '_blank');\r\n        break;\r\n    \r\n      case 'Twitter':\r\n        window.open(`http://twitter.com/share?url=${window.location.origin}`, '_blank');\r\n        break;\r\n    \r\n      case 'Email':\r\n        break;\r\n    \r\n      default:\r\n        navigator.clipboard.writeText(window.location.origin);\r\n        setCopysucc(true);\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n      <>\r\n    <SpeedDial\r\n        ariaLabel=\"SpeedDial example\"\r\n        className={classes.speedDial}\r\n        icon={<SpeedDialIcon icon={<ShareIcon/>} openIcon={<CloseIcon/>} />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n        direction=\"up\"\r\n    >\r\n        {actions.map((action) => (\r\n        <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={() => handleClick(action.name)}\r\n        />\r\n        ))}\r\n    </SpeedDial>\r\n    { copysucc && <Snackbar message=\"Link Copied!\" /> }\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Transition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Snackbar = ({message}) => {\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Sb\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            message={message}\r\n            action={\r\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Text from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    header : {\r\n        paddingTop: theme.spacing(12),\r\n        paddingBottom: theme.spacing(12),\r\n        color: '#ffffff',\r\n        background: 'linear-gradient(45deg, #673AB7, #3F51B5)'\r\n    }\r\n}));\r\nfunction Devinfo(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Box className={classes.header}>\r\n            <Container maxWidth=\"md\">\r\n                <Text variant=\"h2\">Number Converter</Text>\r\n                <Text variant=\"subtitle1\">This is a simple number converter application which allow you to convert Binary, Decimal, Octal & Hexadecimal to Binary, Decimal, Octal and Hexadecimal. So just enjoy (:-</Text>\r\n            </Container>\r\n        </Box>\r\n        <Box my={3}>\r\n            <Container maxWidth=\"md\">\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={5} md={4}>\r\n                        <Text variant=\"h4\">Developer Info</Text>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={7} md={8}>\r\n                        <Text variant=\"h6\">Name : <Link target=\"_blank\" href=\"https://github.com/shanto-miah\">Shanto Miah</Link></Text>\r\n                        <Text variant=\"h6\">Email : <Link target=\"_blank\" href=\"mailto:contact@shantoisonline.com\">contact@shantoisonline.com</Link></Text>\r\n                        <Text variant=\"h6\">Website : <Link target=\"_blank\" href=\"https://shantoisonline.com\">https://shantoisonline.com</Link></Text>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Devinfo;","import React, { Component } from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport Navmenu from './Navmenu';\r\nimport Convert from './Convert';\r\nimport Home from './Home';\r\nimport SpeedDials from './SpeedDials';\r\nimport Devinfo from './Devinfo';\r\n\r\nconst Routes = ({location}) => {    \r\n    return (\r\n        <>\r\n            <SpeedDials/>\r\n            \r\n            <Navmenu path={location.pathname}/>\r\n\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/developer-info\" component={Devinfo}/>\r\n\r\n            <Route exact path=\"/binary-to-octal/:num?\" component={({match}) => (<Convert from=\"2\" to=\"8\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/binary-to-decimal/:num?\" component={({match}) => (<Convert from=\"2\" to=\"10\" input={match.params.num ? match.params.num : ''} />)}/>\r\n            <Route exact path=\"/binary-to-hexadecimal/:num?\" component={({match}) => (<Convert from=\"2\" to=\"16\" input={match.params.num ? match.params.num : ''} />)} />\r\n\r\n            <Route exact path=\"/octal-to-binary/:num?\" component={({match}) => (<Convert from=\"8\" to=\"2\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/octal-to-decimal/:num?\" component={({match}) => (<Convert from=\"8\" to=\"10\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/octal-to-hexadecimal/:num?\" component={({match}) => (<Convert from=\"8\" to=\"16\" input={match.params.num ? match.params.num : ''} />)} />\r\n\r\n            <Route exact path=\"/decimal-to-binary/:num?\" component={({match}) => (<Convert from=\"10\" to=\"2\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/decimal-to-octal/:num?\" component={({match}) => (<Convert from=\"10\" to=\"8\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/decimal-to-hexadecimal/:num?\" component={({match}) => (<Convert from=\"10\" to=\"16\" input={match.params.num ? match.params.num : ''} />)} />\r\n\r\n            \r\n            <Route exact path=\"/hexadecimal-to-binary/:num?\" component={({match}) => (<Convert from=\"16\" to=\"2\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/hexadecimal-to-octal/:num?\" component={({match}) => (<Convert from=\"16\" to=\"8\" input={match.params.num ? match.params.num : ''} />)} />\r\n            <Route exact path=\"/hexadecimal-to-decimal/:num?\" component={({match}) => (<Convert from=\"16\" to=\"10\" input={match.params.num ? match.params.num : ''} />)} />\r\n        </>\r\n    )\r\n}\r\n\r\nclass Main extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Route path=\"/\" component={Routes} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Main/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'fontsource-roboto';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nReactDOM.render(\r\n    <CssBaseline>\r\n      <App/>\r\n    </CssBaseline>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}